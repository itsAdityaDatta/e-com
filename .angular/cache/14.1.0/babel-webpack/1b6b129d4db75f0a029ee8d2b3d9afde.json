{"ast":null,"code":"import { __decorate } from 'tslib';\nimport { ɵɵdefineInjectable, Injectable } from '@angular/core';\nimport * as lib from 'papaparse/papaparse.min.js';\nimport * as ɵngcc0 from '@angular/core';\nlet Papa = class Papa {\n  constructor() {\n    this._papa = lib;\n  }\n  /**\n   * Parse CSV to an array\n   */\n\n\n  parse(csv, config) {\n    return this._papa.parse(csv, config);\n  }\n  /**\n   * Convert an array into CSV\n   */\n\n\n  unparse(data, config) {\n    return this._papa.unparse(data, config);\n  }\n  /**\n   * Set the size in bytes of each file chunk.\n   * Used when streaming files obtained from the DOM that\n   * exist on the local computer. Default 10 MB.\n   */\n\n\n  setLocalChunkSize(value) {\n    this._papa.LocalChunkSize = value;\n  }\n  /**\n   * Set the size in bytes of each remote file chunk.\n   * Used when streaming remote files. Default 5 MB.\n   */\n\n\n  setRemoteChunkSize(value) {\n    this._papa.RemoteChunkSize = value;\n  }\n  /**\n   * Set the delimiter used when it is left unspecified and cannot be detected automatically. Default is comma.\n   */\n\n\n  setDefaultDelimiter(value) {\n    this._papa.DefaultDelimiter = value;\n  }\n  /**\n   * An array of characters that are not allowed as delimiters.\n   */\n\n\n  get badDelimiters() {\n    return this._papa.BAD_DELIMITERS;\n  }\n  /**\n   * The true delimiter. Invisible. ASCII code 30.\n   * Should be doing the job we strangely rely upon commas and tabs for.\n   */\n\n\n  get recordSeparator() {\n    return this._papa.RECORD_SEP;\n  }\n  /**\n   * Also sometimes used as a delimiting character. ASCII code 31.\n   */\n\n\n  get unitSeparator() {\n    return this._papa.UNIT_SEP;\n  }\n  /**\n   * Whether or not the browser supports HTML5 Web Workers.\n   * If false, worker: true will have no effect.\n   */\n\n\n  get workersSupported() {\n    return this._papa.WORKERS_SUPPORTED;\n  }\n\n};\n\nPapa.ɵfac = function Papa_Factory(t) {\n  return new (t || Papa)();\n};\n\nPapa.ɵprov = ɵɵdefineInjectable({\n  factory: function Papa_Factory() {\n    return new Papa();\n  },\n  token: Papa,\n  providedIn: \"root\"\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(Papa, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [];\n  }, null);\n})();\n/*\n * Public API Surface of papaparse\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { Papa };","map":{"version":3,"names":["__decorate","ɵɵdefineInjectable","Injectable","lib","ɵngcc0","Papa","constructor","_papa","parse","csv","config","unparse","data","setLocalChunkSize","value","LocalChunkSize","setRemoteChunkSize","RemoteChunkSize","setDefaultDelimiter","DefaultDelimiter","badDelimiters","BAD_DELIMITERS","recordSeparator","RECORD_SEP","unitSeparator","UNIT_SEP","workersSupported","WORKERS_SUPPORTED","ɵfac","Papa_Factory","t","ɵprov","factory","token","providedIn","ngDevMode","ɵsetClassMetadata","type","args"],"sources":["/Users/adityachowdhary/Desktop/E-Commerce-Angular-main/node_modules/ngx-papaparse/__ivy_ngcc__/fesm2015/ngx-papaparse.js"],"sourcesContent":["import { __decorate } from 'tslib';\nimport { ɵɵdefineInjectable, Injectable } from '@angular/core';\nimport * as lib from 'papaparse/papaparse.min.js';\n\nimport * as ɵngcc0 from '@angular/core';\nlet Papa = class Papa {\n    constructor() {\n        this._papa = lib;\n    }\n    /**\n     * Parse CSV to an array\n     */\n    parse(csv, config) {\n        return this._papa.parse(csv, config);\n    }\n    /**\n     * Convert an array into CSV\n     */\n    unparse(data, config) {\n        return this._papa.unparse(data, config);\n    }\n    /**\n     * Set the size in bytes of each file chunk.\n     * Used when streaming files obtained from the DOM that\n     * exist on the local computer. Default 10 MB.\n     */\n    setLocalChunkSize(value) {\n        this._papa.LocalChunkSize = value;\n    }\n    /**\n     * Set the size in bytes of each remote file chunk.\n     * Used when streaming remote files. Default 5 MB.\n     */\n    setRemoteChunkSize(value) {\n        this._papa.RemoteChunkSize = value;\n    }\n    /**\n     * Set the delimiter used when it is left unspecified and cannot be detected automatically. Default is comma.\n     */\n    setDefaultDelimiter(value) {\n        this._papa.DefaultDelimiter = value;\n    }\n    /**\n     * An array of characters that are not allowed as delimiters.\n     */\n    get badDelimiters() {\n        return this._papa.BAD_DELIMITERS;\n    }\n    /**\n     * The true delimiter. Invisible. ASCII code 30.\n     * Should be doing the job we strangely rely upon commas and tabs for.\n     */\n    get recordSeparator() {\n        return this._papa.RECORD_SEP;\n    }\n    /**\n     * Also sometimes used as a delimiting character. ASCII code 31.\n     */\n    get unitSeparator() {\n        return this._papa.UNIT_SEP;\n    }\n    /**\n     * Whether or not the browser supports HTML5 Web Workers.\n     * If false, worker: true will have no effect.\n     */\n    get workersSupported() {\n        return this._papa.WORKERS_SUPPORTED;\n    }\n};\nPapa.ɵfac = function Papa_Factory(t) { return new (t || Papa)(); };\nPapa.ɵprov = ɵɵdefineInjectable({ factory: function Papa_Factory() { return new Papa(); }, token: Papa, providedIn: \"root\" });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(Papa, [{\n        type: Injectable,\n        args: [{\n                providedIn: 'root'\n            }]\n    }], function () { return []; }, null); })();\n\n/*\n * Public API Surface of papaparse\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { Papa };\n\n"],"mappings":"AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,SAASC,kBAAT,EAA6BC,UAA7B,QAA+C,eAA/C;AACA,OAAO,KAAKC,GAAZ,MAAqB,4BAArB;AAEA,OAAO,KAAKC,MAAZ,MAAwB,eAAxB;AACA,IAAIC,IAAI,GAAG,MAAMA,IAAN,CAAW;EAClBC,WAAW,GAAG;IACV,KAAKC,KAAL,GAAaJ,GAAb;EACH;EACD;AACJ;AACA;;;EACIK,KAAK,CAACC,GAAD,EAAMC,MAAN,EAAc;IACf,OAAO,KAAKH,KAAL,CAAWC,KAAX,CAAiBC,GAAjB,EAAsBC,MAAtB,CAAP;EACH;EACD;AACJ;AACA;;;EACIC,OAAO,CAACC,IAAD,EAAOF,MAAP,EAAe;IAClB,OAAO,KAAKH,KAAL,CAAWI,OAAX,CAAmBC,IAAnB,EAAyBF,MAAzB,CAAP;EACH;EACD;AACJ;AACA;AACA;AACA;;;EACIG,iBAAiB,CAACC,KAAD,EAAQ;IACrB,KAAKP,KAAL,CAAWQ,cAAX,GAA4BD,KAA5B;EACH;EACD;AACJ;AACA;AACA;;;EACIE,kBAAkB,CAACF,KAAD,EAAQ;IACtB,KAAKP,KAAL,CAAWU,eAAX,GAA6BH,KAA7B;EACH;EACD;AACJ;AACA;;;EACII,mBAAmB,CAACJ,KAAD,EAAQ;IACvB,KAAKP,KAAL,CAAWY,gBAAX,GAA8BL,KAA9B;EACH;EACD;AACJ;AACA;;;EACqB,IAAbM,aAAa,GAAG;IAChB,OAAO,KAAKb,KAAL,CAAWc,cAAlB;EACH;EACD;AACJ;AACA;AACA;;;EACuB,IAAfC,eAAe,GAAG;IAClB,OAAO,KAAKf,KAAL,CAAWgB,UAAlB;EACH;EACD;AACJ;AACA;;;EACqB,IAAbC,aAAa,GAAG;IAChB,OAAO,KAAKjB,KAAL,CAAWkB,QAAlB;EACH;EACD;AACJ;AACA;AACA;;;EACwB,IAAhBC,gBAAgB,GAAG;IACnB,OAAO,KAAKnB,KAAL,CAAWoB,iBAAlB;EACH;;AA9DiB,CAAtB;;AAgEAtB,IAAI,CAACuB,IAAL,GAAY,SAASC,YAAT,CAAsBC,CAAtB,EAAyB;EAAE,OAAO,KAAKA,CAAC,IAAIzB,IAAV,GAAP;AAA2B,CAAlE;;AACAA,IAAI,CAAC0B,KAAL,GAAa9B,kBAAkB,CAAC;EAAE+B,OAAO,EAAE,SAASH,YAAT,GAAwB;IAAE,OAAO,IAAIxB,IAAJ,EAAP;EAAoB,CAAzD;EAA2D4B,KAAK,EAAE5B,IAAlE;EAAwE6B,UAAU,EAAE;AAApF,CAAD,CAA/B;;AACA,CAAC,YAAY;EAAE,CAAC,OAAOC,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmD/B,MAAM,CAACgC,iBAAP,CAAyB/B,IAAzB,EAA+B,CAAC;IAC1FgC,IAAI,EAAEnC,UADoF;IAE1FoC,IAAI,EAAE,CAAC;MACCJ,UAAU,EAAE;IADb,CAAD;EAFoF,CAAD,CAA/B,EAK1D,YAAY;IAAE,OAAO,EAAP;EAAY,CALgC,EAK9B,IAL8B,CAAnD;AAK6B,CAL5C;AAOA;AACA;AACA;;AAEA;AACA;AACA;;;AAEA,SAAS7B,IAAT"},"metadata":{},"sourceType":"module"}